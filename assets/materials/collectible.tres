[gd_resource type="ShaderMaterial" load_steps=3 format=2]

[ext_resource path="res://assets/textures/coin.png" type="Texture" id=1]

[sub_resource type="Shader" id=2]
code = "shader_type spatial;
render_mode world_vertex_coords, blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx,unshaded;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

uniform float CURVATURE = 5;
uniform float CURVATURE_ACTIVE = 1;
uniform float CURVATURE_DISTANCE = 70;

void vertex() {
	if(CURVATURE_ACTIVE == 1.0) {
		NORMAL = (WORLD_MATRIX * vec4(NORMAL, 0.0)).xyz;
		float dist = length(CAMERA_MATRIX[3].xyz - VERTEX) / CURVATURE_DISTANCE;
		VERTEX.y -= pow(dist, CURVATURE);
	}
}

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb * 4.0 * SCREEN_UV.y;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
}
"

[resource]
shader = SubResource( 2 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/CURVATURE = 5.0
shader_param/CURVATURE_ACTIVE = 1.0
shader_param/CURVATURE_DISTANCE = 70.0
shader_param/texture_albedo = ExtResource( 1 )
